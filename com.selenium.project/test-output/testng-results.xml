<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="10" ignored="0" total="18" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="1068741" started-at="2020-11-25T15:32:02Z" finished-at="2020-11-25T15:49:51Z">
    <groups>
      <group name="Regression">
        <method signature="RegressionTest.CarInsuranceTestCase(java.util.Hashtable)[pri:2, instance:testClass.RegressionTest@4fb64261]" name="CarInsuranceTestCase" class="testClass.RegressionTest"/>
        <method signature="RegressionTest.travelInsuranceTestCase(java.util.Hashtable)[pri:0, instance:testClass.RegressionTest@4fb64261]" name="travelInsuranceTestCase" class="testClass.RegressionTest"/>
      </group> <!-- Regression -->
      <group name="Smoke">
        <method signature="SmoketTest.HealthInsuranceTestCase()[pri:0, instance:testClass.SmoketTest@42607a4f]" name="HealthInsuranceTestCase" class="testClass.SmoketTest"/>
        <method signature="SmoketTest.Navigation()[pri:0, instance:testClass.SmoketTest@42607a4f]" name="Navigation" class="testClass.SmoketTest"/>
        <method signature="SmoketTest.checkIconAndMenuItem()[pri:0, instance:testClass.SmoketTest@42607a4f]" name="checkIconAndMenuItem" class="testClass.SmoketTest"/>
      </group> <!-- Smoke -->
    </groups>
    <test name="Test" duration-ms="1068741" started-at="2020-11-25T15:32:02Z" finished-at="2020-11-25T15:49:51Z">
      <class name="utilities.test_DataProvider">
        <test-method status="PASS" signature="carInsuranceTestCase(java.util.Hashtable)[pri:0, instance:utilities.test_DataProvider@782663d3]" name="carInsuranceTestCase" duration-ms="2" started-at="2020-11-25T21:08:56Z" data-provider="testCase1" finished-at="2020-11-25T21:08:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Name=Mayukh Kundu, PhoneNumber=9718116506, Remark=Valid Credentials, Email=mayukh.kundu@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- carInsuranceTestCase -->
        <test-method status="PASS" signature="carInsuranceTestCase(java.util.Hashtable)[pri:0, instance:utilities.test_DataProvider@782663d3]" name="carInsuranceTestCase" duration-ms="1" started-at="2020-11-25T21:08:56Z" data-provider="testCase1" finished-at="2020-11-25T21:08:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Name=Mayukh Kundu, PhoneNumber=, Remark=Invalid Credentials, Email=mayukh.kundu@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- carInsuranceTestCase -->
        <test-method status="PASS" signature="carInsuranceTestCase(java.util.Hashtable)[pri:0, instance:utilities.test_DataProvider@782663d3]" name="carInsuranceTestCase" duration-ms="2" started-at="2020-11-25T21:08:56Z" data-provider="testCase1" finished-at="2020-11-25T21:08:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Name=, PhoneNumber=9718116506, Remark=Invalid Credentials, Email=mayukh.kundu@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- carInsuranceTestCase -->
        <test-method status="PASS" signature="carInsuranceTestCase(java.util.Hashtable)[pri:0, instance:utilities.test_DataProvider@782663d3]" name="carInsuranceTestCase" duration-ms="1" started-at="2020-11-25T21:08:56Z" data-provider="testCase1" finished-at="2020-11-25T21:08:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Name=Mayukh Kundu, PhoneNumber=9718116506, Remark=Invalid Credentials, Email=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- carInsuranceTestCase -->
      </class> <!-- utilities.test_DataProvider -->
      <class name="testClass.SmoketTest">
        <test-method status="PASS" signature="HealthInsuranceTestCase()[pri:0, instance:testClass.SmoketTest@42607a4f]" name="HealthInsuranceTestCase" duration-ms="30094" started-at="2020-11-25T21:08:56Z" finished-at="2020-11-25T21:09:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HealthInsuranceTestCase -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:testClass.SmoketTest@42607a4f]" name="flushReports" is-config="true" duration-ms="178" started-at="2020-11-25T21:09:26Z" finished-at="2020-11-25T21:09:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="Navigation()[pri:0, instance:testClass.SmoketTest@42607a4f]" name="Navigation" duration-ms="85444" started-at="2020-11-25T21:09:26Z" finished-at="2020-11-25T21:10:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Navigation -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:testClass.SmoketTest@42607a4f]" name="flushReports" is-config="true" duration-ms="111" started-at="2020-11-25T21:10:52Z" finished-at="2020-11-25T21:10:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="FAIL" signature="checkIconAndMenuItem()[pri:0, instance:testClass.SmoketTest@42607a4f]" name="checkIconAndMenuItem" duration-ms="78163" started-at="2020-11-25T21:10:52Z" finished-at="2020-11-25T21:12:10Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[javascript error: Failed to execute 'elementsFromPoint' on 'Document': The provided double value is non-finite.
  (Session info: chrome=87.0.4280.66)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DELL-PC', ip: '192.168.0.102', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.66, chrome: {chromedriverVersion: 87.0.4280.20 (c99e81631faa0..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:63695}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 309bc7e2933f2a43c62b8ffa88a15478]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: javascript error: Failed to execute 'elementsFromPoint' on 'Document': The provided double value is non-finite.
  (Session info: chrome=87.0.4280.66)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DELL-PC', ip: '192.168.0.102', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.66, chrome: {chromedriverVersion: 87.0.4280.20 (c99e81631faa0..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:63695}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 309bc7e2933f2a43c62b8ffa88a15478
	at org.testng.Assert.fail(Assert.java:93)
	at BaseClass.pageBaseClass.testCaseFail(pageBaseClass.java:100)
	at pageClass.landingPage.getCarInsurance(landingPage.java:137)
	at testClass.SmoketTest.checkIconAndMenuItem(SmoketTest.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIconAndMenuItem -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:testClass.SmoketTest@42607a4f]" name="flushReports" is-config="true" duration-ms="26882" started-at="2020-11-25T21:12:10Z" finished-at="2020-11-25T21:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="close()[pri:0, instance:testClass.SmoketTest@42607a4f]" name="close" is-config="true" duration-ms="12975" started-at="2020-11-25T21:19:38Z" finished-at="2020-11-25T21:19:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- testClass.SmoketTest -->
      <class name="testClass.RegressionTest">
        <test-method status="PASS" signature="travelInsuranceTestCase(java.util.Hashtable)[pri:0, instance:testClass.RegressionTest@4fb64261]" name="travelInsuranceTestCase" duration-ms="57976" started-at="2020-11-25T21:02:03Z" data-provider="getTravelInsuranceTestCase" finished-at="2020-11-25T21:03:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=sourya.halder@gmail.com, name=sourya, Age2=INT(22), Remarks=Valid Credentials, PhoneNumber=9876543210, Age1=INT(21), Country=Bulgaria}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- travelInsuranceTestCase -->
        <test-method status="PASS" signature="close()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="close" is-config="true" duration-ms="411" started-at="2020-11-25T21:03:01Z" finished-at="2020-11-25T21:03:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="flushReports" is-config="true" duration-ms="1091" started-at="2020-11-25T21:03:02Z" finished-at="2020-11-25T21:03:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="FAIL" signature="travelInsuranceTestCase(java.util.Hashtable)[pri:0, instance:testClass.RegressionTest@4fb64261]" name="travelInsuranceTestCase" duration-ms="29948" started-at="2020-11-25T21:03:03Z" data-provider="getTravelInsuranceTestCase" finished-at="2020-11-25T21:03:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=sourya.halder@gmail.com, name=sourya, Age2=, Remarks=Invalid Credentials, PhoneNumber=9876543210, Age1=, Country=Bulgaria}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Please enter age of travellers]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Please enter age of travellers
	at org.testng.Assert.fail(Assert.java:93)
	at BaseClass.pageBaseClass.testCaseFail(pageBaseClass.java:100)
	at pageClass.travelFillDetails.fillDetails(travelFillDetails.java:78)
	at testClass.RegressionTest.travelInsuranceTestCase(RegressionTest.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- travelInsuranceTestCase -->
        <test-method status="PASS" signature="close()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="close" is-config="true" duration-ms="156" started-at="2020-11-25T21:03:33Z" finished-at="2020-11-25T21:03:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="flushReports" is-config="true" duration-ms="334" started-at="2020-11-25T21:03:33Z" finished-at="2020-11-25T21:03:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="FAIL" signature="travelInsuranceTestCase(java.util.Hashtable)[pri:0, instance:testClass.RegressionTest@4fb64261]" name="travelInsuranceTestCase" duration-ms="31558" started-at="2020-11-25T21:03:33Z" data-provider="getTravelInsuranceTestCase" finished-at="2020-11-25T21:04:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=sourya.halder@gmail.com, name=, Age2=INT(22), Remarks=Invalid Credentials, PhoneNumber=9876543210, Age1=INT(21), Country=Bulgaria}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[This is required.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: This is required.
	at org.testng.Assert.fail(Assert.java:93)
	at BaseClass.pageBaseClass.testCaseFail(pageBaseClass.java:100)
	at pageClass.TravellerPersonalDetails.personalDetails(TravellerPersonalDetails.java:54)
	at testClass.RegressionTest.travelInsuranceTestCase(RegressionTest.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- travelInsuranceTestCase -->
        <test-method status="PASS" signature="close()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="close" is-config="true" duration-ms="250" started-at="2020-11-25T21:04:05Z" finished-at="2020-11-25T21:04:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="flushReports" is-config="true" duration-ms="162" started-at="2020-11-25T21:04:05Z" finished-at="2020-11-25T21:04:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="FAIL" signature="travelInsuranceTestCase(java.util.Hashtable)[pri:0, instance:testClass.RegressionTest@4fb64261]" name="travelInsuranceTestCase" duration-ms="32875" started-at="2020-11-25T21:04:05Z" data-provider="getTravelInsuranceTestCase" finished-at="2020-11-25T21:04:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=sourya.halder@gmail.com, name=sourya, Age2=INT(22), Remarks=Invalid  Credentials, PhoneNumber=, Age1=INT(21), Country=Bulgaria}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[This is required.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: This is required.
	at org.testng.Assert.fail(Assert.java:93)
	at BaseClass.pageBaseClass.testCaseFail(pageBaseClass.java:100)
	at pageClass.TravellerPersonalDetails.personalDetails(TravellerPersonalDetails.java:58)
	at testClass.RegressionTest.travelInsuranceTestCase(RegressionTest.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- travelInsuranceTestCase -->
        <test-method status="PASS" signature="close()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="close" is-config="true" duration-ms="716" started-at="2020-11-25T21:04:38Z" finished-at="2020-11-25T21:04:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="flushReports" is-config="true" duration-ms="132" started-at="2020-11-25T21:04:39Z" finished-at="2020-11-25T21:04:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="FAIL" signature="travelInsuranceTestCase(java.util.Hashtable)[pri:0, instance:testClass.RegressionTest@4fb64261]" name="travelInsuranceTestCase" duration-ms="99670" started-at="2020-11-25T21:04:39Z" data-provider="getTravelInsuranceTestCase" finished-at="2020-11-25T21:06:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=sourya.halder@gmail, name=sourya, Age2=INT(22), Remarks=Invalid  Credentials, PhoneNumber=9876543210, Age1=INT(21), Country=Bulgaria}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"*[name='SI']"}
  (Session info: chrome=87.0.4280.66)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DELL-PC', ip: '192.168.0.102', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.66, chrome: {chromedriverVersion: 87.0.4280.20 (c99e81631faa0..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:63399}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: d39d2210b2f252ea697d88171d0c5505
*** Element info: {Using=name, value=SI}]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: no such element: Unable to locate element: {"method":"css selector","selector":"*[name='SI']"}
  (Session info: chrome=87.0.4280.66)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DELL-PC', ip: '192.168.0.102', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.66, chrome: {chromedriverVersion: 87.0.4280.20 (c99e81631faa0..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:63399}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: d39d2210b2f252ea697d88171d0c5505
*** Element info: {Using=name, value=SI}
	at org.testng.Assert.fail(Assert.java:93)
	at BaseClass.pageBaseClass.testCaseFail(pageBaseClass.java:100)
	at pageClass.travelInsurance.clickPriceDropDown(travelInsurance.java:45)
	at testClass.RegressionTest.travelInsuranceTestCase(RegressionTest.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- travelInsuranceTestCase -->
        <test-method status="PASS" signature="close()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="close" is-config="true" duration-ms="167" started-at="2020-11-25T21:06:19Z" finished-at="2020-11-25T21:06:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="flushReports" is-config="true" duration-ms="116" started-at="2020-11-25T21:06:19Z" finished-at="2020-11-25T21:06:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="FAIL" signature="travelInsuranceTestCase(java.util.Hashtable)[pri:0, instance:testClass.RegressionTest@4fb64261]" name="travelInsuranceTestCase" duration-ms="107560" started-at="2020-11-25T21:06:19Z" data-provider="getTravelInsuranceTestCase" finished-at="2020-11-25T21:08:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=, name=sourya, Age2=INT(22), Remarks=Invalid  Credentials, PhoneNumber=9876543210, Age1=INT(21), Country=Bulgaria}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="email"]"}
  (Session info: chrome=87.0.4280.66)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DELL-PC', ip: '192.168.0.102', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.66, chrome: {chromedriverVersion: 87.0.4280.20 (c99e81631faa0..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:63445}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: fab01eed974cdd16390e818cf4a4ce6a
*** Element info: {Using=xpath, value=//*[@id="email"]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="email"]"}
  (Session info: chrome=87.0.4280.66)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DELL-PC', ip: '192.168.0.102', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.66, chrome: {chromedriverVersion: 87.0.4280.20 (c99e81631faa0..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:63445}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: fab01eed974cdd16390e818cf4a4ce6a
*** Element info: {Using=xpath, value=//*[@id="email"]}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at pageClass.TravellerPersonalDetails.personalDetails(TravellerPersonalDetails.java:61)
	at testClass.RegressionTest.travelInsuranceTestCase(RegressionTest.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- travelInsuranceTestCase -->
        <test-method status="PASS" signature="close()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="close" is-config="true" duration-ms="1059" started-at="2020-11-25T21:08:07Z" finished-at="2020-11-25T21:08:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="flushReports" is-config="true" duration-ms="182" started-at="2020-11-25T21:08:08Z" finished-at="2020-11-25T21:08:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="FAIL" signature="travelInsuranceTestCase(java.util.Hashtable)[pri:0, instance:testClass.RegressionTest@4fb64261]" name="travelInsuranceTestCase" duration-ms="46177" started-at="2020-11-25T21:08:08Z" data-provider="getTravelInsuranceTestCase" finished-at="2020-11-25T21:08:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=sourya.halder@gmail.com, name=sourya, Age2=INT(22), Remarks=Invalid  Credentials, PhoneNumber=9876543210, Age1=INT(21), Country=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Country field is empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Country field is empty
	at org.testng.Assert.fail(Assert.java:93)
	at BaseClass.pageBaseClass.testCaseFail(pageBaseClass.java:100)
	at pageClass.travelFillDetails.fillDetails(travelFillDetails.java:81)
	at testClass.RegressionTest.travelInsuranceTestCase(RegressionTest.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- travelInsuranceTestCase -->
        <test-method status="PASS" signature="close()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="close" is-config="true" duration-ms="1370" started-at="2020-11-25T21:08:54Z" finished-at="2020-11-25T21:08:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="flushReports" is-config="true" duration-ms="126" started-at="2020-11-25T21:08:55Z" finished-at="2020-11-25T21:08:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="CarInsuranceTestCase(java.util.Hashtable)[pri:2, instance:testClass.RegressionTest@4fb64261]" name="CarInsuranceTestCase" duration-ms="145206" started-at="2020-11-25T21:12:37Z" data-provider="carInsuranceTestCase" finished-at="2020-11-25T21:15:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Name=Mayukh Kundu, PhoneNumber=9718116506, Remark=Valid Credentials, Email=mayukh.kundu@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CarInsuranceTestCase -->
        <test-method status="PASS" signature="close()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="close" is-config="true" duration-ms="23282" started-at="2020-11-25T21:15:02Z" finished-at="2020-11-25T21:15:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="flushReports" is-config="true" duration-ms="401" started-at="2020-11-25T21:15:25Z" finished-at="2020-11-25T21:15:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="FAIL" signature="CarInsuranceTestCase(java.util.Hashtable)[pri:2, instance:testClass.RegressionTest@4fb64261]" name="CarInsuranceTestCase" duration-ms="76944" started-at="2020-11-25T21:15:26Z" data-provider="carInsuranceTestCase" finished-at="2020-11-25T21:16:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Name=Mayukh Kundu, PhoneNumber=, Remark=Invalid Credentials, Email=mayukh.kundu@gmail.com}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
	at org.testng.Assert.fail(Assert.java:93)
	at BaseClass.pageBaseClass.testCaseFail(pageBaseClass.java:100)
	at pageClass.fillCarInsuranceForm.fillForm(fillCarInsuranceForm.java:109)
	at testClass.RegressionTest.CarInsuranceTestCase(RegressionTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CarInsuranceTestCase -->
        <test-method status="PASS" signature="close()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="close" is-config="true" duration-ms="1113" started-at="2020-11-25T21:16:43Z" finished-at="2020-11-25T21:16:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="flushReports" is-config="true" duration-ms="120" started-at="2020-11-25T21:16:44Z" finished-at="2020-11-25T21:16:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="FAIL" signature="CarInsuranceTestCase(java.util.Hashtable)[pri:2, instance:testClass.RegressionTest@4fb64261]" name="CarInsuranceTestCase" duration-ms="68902" started-at="2020-11-25T21:16:44Z" data-provider="carInsuranceTestCase" finished-at="2020-11-25T21:17:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Name=, PhoneNumber=9718116506, Remark=Invalid Credentials, Email=mayukh.kundu@gmail.com}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Please enter your full name.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Please enter your full name.
	at org.testng.Assert.fail(Assert.java:93)
	at BaseClass.pageBaseClass.testCaseFail(pageBaseClass.java:100)
	at pageClass.fillCarInsuranceForm.fillForm(fillCarInsuranceForm.java:105)
	at testClass.RegressionTest.CarInsuranceTestCase(RegressionTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CarInsuranceTestCase -->
        <test-method status="PASS" signature="close()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="close" is-config="true" duration-ms="13454" started-at="2020-11-25T21:17:53Z" finished-at="2020-11-25T21:18:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="flushReports" is-config="true" duration-ms="369" started-at="2020-11-25T21:18:06Z" finished-at="2020-11-25T21:18:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="FAIL" signature="CarInsuranceTestCase(java.util.Hashtable)[pri:2, instance:testClass.RegressionTest@4fb64261]" name="CarInsuranceTestCase" duration-ms="83633" started-at="2020-11-25T21:18:07Z" data-provider="carInsuranceTestCase" finished-at="2020-11-25T21:19:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Name=Mayukh Kundu, PhoneNumber=9718116506, Remark=Invalid Credentials, Email=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Please enter a valid e-mail ID.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Please enter a valid e-mail ID.
	at org.testng.Assert.fail(Assert.java:93)
	at BaseClass.pageBaseClass.testCaseFail(pageBaseClass.java:100)
	at pageClass.fillCarInsuranceForm.fillForm(fillCarInsuranceForm.java:113)
	at testClass.RegressionTest.CarInsuranceTestCase(RegressionTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CarInsuranceTestCase -->
        <test-method status="PASS" signature="close()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="close" is-config="true" duration-ms="7423" started-at="2020-11-25T21:19:30Z" finished-at="2020-11-25T21:19:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:testClass.RegressionTest@4fb64261]" name="flushReports" is-config="true" duration-ms="136" started-at="2020-11-25T21:19:38Z" finished-at="2020-11-25T21:19:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- testClass.RegressionTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
